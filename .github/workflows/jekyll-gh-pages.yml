# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    defaults:
      run:
        working-directory: example

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.10.0

      - name: Install Dependencies
        run: flutter packages get
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build Flutter Web
        run: |
          flutter build web --web-renderer canvaskit --base-href /flutter_captcha/
          mkdir -p $RUNNER_TEMP/web-artifacts
          mv build/web $RUNNER_TEMP/web-artifacts
          ls -l ${{ runner.workspace }}/web-artifacts
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: $RUNNER_TEMP/web-artifacts
          destination: ./_site
      - name: Upload Flutter Web Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-web-artifacts
          path: "./_site"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
